import streamlit as st
import pandas as pd
import os
from PIL import Image
import matplotlib.pyplot as plt
import seaborn as sns

# Configuraci칩n b치sica de la p치gina
st.set_page_config(
    page_title="Recomendador de Pel칤culas",
    page_icon="游꿟",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Cargar datos - ajustado a tus archivos
@st.cache_data
def load_data():
    data = {}
    try:
        # Lista de tus archivos de datos (ajusta seg칰n lo que realmente uses)
        files = {
            'actores_directores': 'actores_directores',
            'peliculas_premios': 'peliculas_premios',
            'recaudacion': 'recaudacion_peliculas',
            'top_vistas': 'top_10_mas_vistas',
            'top_puntuadas': 'top_10_mejor_puntuadas',
            'comentarios': 'comentarios_peliculas.csv',
            'vistas_pais': 'vistas_por_pais'
        }
        
        # Intentar cargar cada archivo con y sin extensi칩n .csv
        for name, filename in files.items():
            try:
                # Primero intenta con .csv
                data[name] = pd.read_csv(f'{filename}.csv')
            except:
                # Si falla, intenta sin extensi칩n
                try:
                    data[name] = pd.read_csv(filename)
                except Exception as e:
                    st.warning(f"No se pudo cargar {filename}: {str(e)}")
                    data[name] = None
        
        return data
    except Exception as e:
        st.error(f"Error cargando datos: {e}")
        return {}

# T칤tulo de la aplicaci칩n
st.title("Sistema de Recomendaci칩n de Pel칤culas 游꿘")

# Cargar datos
data = load_data()

# Sidebar para navegaci칩n
st.sidebar.title("Navegaci칩n")
opciones = ["Inicio", "Visualizaciones", "Recomendador", "Acerca de"]
seleccion = st.sidebar.radio("Ir a", opciones)

if seleccion == "Inicio":
    st.header("Bienvenido al recomendador de pel칤culas")
    st.write("""
    Esta aplicaci칩n te permite explorar datos de pel칤culas y obtener recomendaciones 
    personalizadas basadas en tus preferencias.
    """)
    
    # Mostrar estad칤sticas si los datos est치n cargados
    if data.get('top_vistas') is not None:
        st.subheader("Algunas estad칤sticas")
        col1, col2 = st.columns(2)
        with col1:
            st.metric("Pel칤culas en top vistas", len(data['top_vistas']))
        with col2:
            st.metric("Pel칤culas mejor puntuadas", len(data['top_puntuadas']) if data.get('top_puntuadas') is not None else "N/A")

elif seleccion == "Visualizaciones":
    st.header("Visualizaciones de datos")
    
    # Visualizaci칩n 1: Top pel칤culas m치s vistas
    if data.get('top_vistas') is not None:
        st.subheader("Top 10 pel칤culas m치s vistas")
        fig, ax = plt.subplots(figsize=(10, 6))
        sns.barplot(x='vistas', y='pelicula', data=data['top_vistas'], ax=ax)
        ax.set_xlabel('N칰mero de vistas')
        ax.set_ylabel('Pel칤cula')
        st.pyplot(fig)
    else:
        st.warning("Datos de top vistas no disponibles")
    
    # Visualizaci칩n 2: Recaudaci칩n (si existe)
    if data.get('recaudacion') is not None:
        st.subheader("Recaudaci칩n de pel칤culas")
        # Ajusta seg칰n las columnas que tenga tu archivo
        if 'recaudacion' in data['recaudacion'].columns:
            fig, ax = plt.subplots(figsize=(10, 6))
            sns.barplot(x='recaudacion', y='pelicula', data=data['recaudacion'].nlargest(10, 'recaudacion'), ax=ax)
            ax.set_xlabel('Recaudaci칩n')
            ax.set_ylabel('Pel칤cula')
            st.pyplot(fig)

elif seleccion == "Recomendador":
    st.header("Sistema de recomendaci칩n de pel칤culas")
    
    # Ejemplo de interfaz de recomendaci칩n - ajusta seg칰n tu l칩gica
    col1, col2 = st.columns(2)
    
    with col1:
        genero = st.selectbox("G칠nero favorito", 
                             ["Acci칩n", "Comedia", "Drama", "Ciencia Ficci칩n", "Terror"])
        a침o_min = st.slider("A침o m칤nimo", 1950, 2023, 2000)
    
    with col2:
        rating_min = st.slider("Rating m칤nimo", 1.0, 10.0, 7.0, step=0.5)
        duracion = st.selectbox("Duraci칩n preferida", 
                              ["Cualquiera", "<90 min", "90-120 min", ">120 min"])
    
    if st.button("Generar recomendaciones"):
        # Aqu칤 ir칤a tu l칩gica real de recomendaci칩n
        # Esto es solo un ejemplo placeholder
        st.success("""
        Recomendaciones basadas en tus preferencias:
        1. Pel칤cula de ejemplo 1 (8.5/10)
        2. Pel칤cula de ejemplo 2 (8.2/10)
        3. Pel칤cula de ejemplo 3 (8.0/10)
        """)
        
        # Espacio para mostrar im치genes/p칩sters de pel칤culas recomendadas
        st.subheader("P칩sters de pel칤culas recomendadas")
        try:
            # Ejemplo de c칩mo mostrar im치genes - ajusta paths seg칰n tu estructura
            img_dir = "imagenes_directores_actores"  # Cambia esto por tu directorio real
            if os.path.exists(img_dir):
                sample_images = [f for f in os.listdir(img_dir) if f.endswith(('.jpg', '.png'))][:3]
                cols = st.columns(3)
                for i, img in enumerate(sample_images):
                    with cols[i]:
                        st.image(Image.open(os.path.join(img_dir, img)), width=150)
        except Exception as e:
            st.warning(f"No se pudieron cargar im치genes: {e}")

elif seleccion == "Acerca de":
    st.header("Acerca de este proyecto")
    st.write("""
    **Recomendador de pel칤culas** es un sistema que analiza datos cinematogr치ficos
    para proporcionar recomendaciones personalizadas a los usuarios.
    
    **Datos incluidos:**
    - Top pel칤culas m치s vistas
    - Pel칤culas mejor puntuadas
    - Datos de recaudaci칩n
    - Informaci칩n de actores y directores
    - Comentarios sobre pel칤culas
    """)
    
    st.write("Desarrollado con Python y Streamlit")

# Notas importantes:
# 1. Aseg칰rate de que todos tus archivos de datos est칠n en el mismo directorio que app.py
# 2. Si los archivos est치n en una subcarpeta 'data', ajusta los paths a침adiendo 'data/' antes del nombre
# 3. Verifica los nombres exactos de las columnas en tus CSVs para ajustar las visualizaciones
